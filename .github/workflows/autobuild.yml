#
# Copyright (C) 2024 nosignals
#
name: ULO Autobuilder

on:
  workflow_dispatch:
    inputs:
      kernel:
        description: 'Kernel Version (ex. 6.6.6, 6.1.31-localversion)'
        required: true
        default: '6.1.66-DBAI'
        type: string
      devices:
        description: "Devices"
        required: true
        default: "s905x2"
        type: choice
        options:
          - s905x
          - s905x2
          - s905x3
          - s905x4
          - h5-orangepi-zeroplus2
          - h5-orangepi-zeroplus
          - h5-orangepi-prime
          - h5-orangepi-pc2
          - h6-orangepi-lite2
          - h6-orangepi-1plus
          - h6-orangepi-3
          - h6-orangepi-3lts
          - h616-orangepi-zero2
          - h618-orangepi-zero2w
          - h618-orangepi-zero3
          - rk3566-orangepi-3b
          - rk3588-orangepi-5plus
          - rk3588s-orangepi-5
      rootfs:
        description: 'ROOTFS File (ex. ImmortalWrt-21.02.7-DBAI-armvirt-rootfs.tar.gz)'
        required: true
        default: 'OpenWrt-23.05.5-InsomWRT-armsr-armv8-generic-rootfs.tar.gz'
        type: string
      rootfs_size:
        description: "ROOTFS Size, min 640 (756, 1024, 2048, etc)"
        required: true
        default: '1024'
        type: string
      fwinfo:
        description: 'Firmware Information'
        required: true
        default: 'release note'
        type: string
jobs: 
  build_ipk:
    permissions:
      contents: write
    name: ULO Autobuilder
    runs-on: ubuntu-latest
    steps:
      
      - name: Cleanup and Installing Prerequisites
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get update
          sudo -E apt-get -y install jq lolcat build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses-dev libssl-dev rsync unzip zlib1g-dev file wget
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
                    
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: main
          
      - name: Patching ULO
        run: |
          mv ./.github/workflows/ULO_Workflow.patch ./ULO_Workflow.patch
          patch -p1 < ./ULO_Workflow.patch
          
      - name: Building OpenWrt
        run: |
          sudo ./ulo -y -m ${{ inputs.devices }} -r ${{ inputs.rootfs }} -k ${{ inputs.kernel }} -s ${{ inputs.rootfs_size }}
          
      - name: Creating Package Artifact
        run: |
          mkdir -p ./artifact
          cp -rf ./out/${{ inputs.devices }}/* ./artifact/
          
      - name: Delivering Package
        uses: actions/upload-artifact@v4
        with:
          name: openwrt_package
          path: ./artifact/*

      - name: Upload release asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./artifact/*
          tag: ${{ inputs.devices }}
          file_glob: true
          overwrite: true
          body: |
            ##  OpenWRT Release for ${{ inputs.devices }} devices
            ULO-Builder Release from Github Workflow
            ### OpenWrt Image Information
            - Firmware Details : 
              - Devices type : ${{ inputs.devices }}
              - Kernel version : ${{ inputs.kernel }}
              - ROOTFS File : ${{ inputs.rootfs }}
              - ROOTFS Size : ${{ inputs.rootfs_size }}
            - Firmware Information : 
              - ${{ inputs.fwinfo }}
